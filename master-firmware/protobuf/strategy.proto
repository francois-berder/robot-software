syntax = "proto2";

import "nanopb.proto";

message Score {
    option (nanopb_msgopt).msgid = 8;
    required int32 score = 1;
}

enum PuckColor {
    RED = 0;
    GREEN = 1;
    BLUE = 2;
    RED_OR_GREEN = 3;
    GOLDENIUM = 4;
    EMPTY = 5;
}

message RobotState {
    option (nanopb_msgopt).msgid = 14;
    option (nanopb_msgopt).packed_struct = true;
    required bool arms_are_indexed = 1 [default=false];
    required bool arms_are_deployed = 2 [default=true];
    repeated bool puck_available = 3 [(nanopb).fixed_count=true, (nanopb).max_count=13];
    required bool right_has_puck = 4 [default=false];
    required bool left_has_puck = 5 [default=false];
    required bool electron_launched = 6 [default=false];
    required bool goldonium_in_house = 7 [default=true];
    required bool has_goldonium = 8 [default=false];
    required PuckColor right_puck_color = 9;
    required PuckColor left_puck_color = 10;
    repeated uint32 classified_pucks = 11 [(nanopb).fixed_count=true, (nanopb).max_count=4, packed=true];
    repeated PuckColor right_storage = 12 [(nanopb).fixed_count=true, (nanopb).max_count=4, packed=true];
    repeated PuckColor left_storage = 13 [(nanopb).fixed_count=true, (nanopb).max_count=4, packed=true];
    repeated PuckColor puck_in_scale = 14 [(nanopb).fixed_count=true, (nanopb).max_count=6, packed=true];
    required uint32 num_pucks_in_scale = 15 [default=0];
    required uint32 puck_in_accelerator = 16 [default=0];
    required bool electron_arrived = 17 [default=false];
}
